import React,{useEffect,useState} from 'react';import {supabase} from '../lib/supabase';export default function Tasks({session}){const uid=session.user.id;const[it,si]=useState([]);const[f,sf]=useState({title:'',due_date:'',client_id:null,deal_id:null});const[cs,sc]=useState([]);const[ds,sd]=useState([]);const ld=async()=>{const{data}=await supabase.from('tasks').select('*').eq('user_id',uid).order('created_at',{ascending:false});si(data||[])};const lr=async()=>{const[{data:c},{data:d}]=await Promise.all([supabase.from('clients').select('id,name').eq('user_id',uid),supabase.from('deals').select('id,title').eq('user_id',uid)]);sc(c||[]);sd(d||[])};useEffect(()=>{ld();lr()},[]);const tg=async(id,s)=>{await supabase.from('tasks').update({status:s}).eq('id',id);ld()};const rm=async id=>{await supabase.from('tasks').delete().eq('id',id);ld()};const save=async e=>{e.preventDefault();await supabase.from('tasks').insert([{...f,user_id:uid}]);sf({title:'',due_date:'',client_id:null,deal_id:null});ld()};return <div className='space-y-4'><div className='card card-pad'><h3 className='font-semibold mb-2'>Nova tarefa</h3><form onSubmit={save} className='grid grid-cols-1 md:grid-cols-5 gap-2'><input className='input md:col-span-2' placeholder='Título' value={f.title} onChange={e=>sf({...f,title:e.target.value})} required/><input className='input' type='date' value={f.due_date} onChange={e=>sf({...f,due_date:e.target.value})}/><select className='input' value={f.client_id||''} onChange={e=>sf({...f,client_id:e.target.value||null})}><option value=''>Cliente</option>{cs.map(c=><option key={c.id} value={c.id}>{c.name}</option>)}</select><select className='input' value={f.deal_id||''} onChange={e=>sf({...f,deal_id:e.target.value||null})}><option value=''>Negócio</option>{ds.map(d=><option key={d.id} value={d.id}>{d.title}</option>)}</select><button className='btn-primary'>Salvar</button></form></div><div className='grid grid-cols-1 md:grid-cols-2 gap-4'><div className='card card-pad'><div className='font-medium mb-2'>Pendentes</div><ul className='space-y-2'>{it.filter(i=>i.status==='pendente').map(x=><li key={x.id} className='border rounded-xl p-3 bg-white dark:bg-[#100c16]'><div className='font-semibold'>{x.title}</div><div className='text-xs'>Vencimento: {x.due_date||'-'}</div><div className='flex gap-2 mt-2'><button onClick={()=>tg(x.id,'concluida')} className='btn-ghost'>Concluir</button><button onClick={()=>rm(x.id)} className='text-sm text-red-500 ml-auto'>Excluir</button></div></li>)}{it.filter(i=>i.status==='pendente').length===0&&<div className='text-sm'>Sem tarefas pendentes</div>}</ul></div><div className='card card-pad'><div className='font-medium mb-2'>Concluídas</div><ul className='space-y-2'>{it.filter(i=>i.status==='concluida').map(x=><li key={x.id} className='border rounded-xl p-3 bg-white dark:bg-[#100c16]'><div className='font-semibold'>{x.title}</div><div className='text-xs'>Vencimento: {x.due_date||'-'}</div><div className='flex gap-2 mt-2'><button onClick={()=>tg(x.id,'pendente')} className='btn-ghost'>Reabrir</button><button onClick={()=>rm(x.id)} className='text-sm text-red-500 ml-auto'>Excluir</button></div></li>)}{it.filter(i=>i.status==='concluida').length===0&&<div className='text-sm'>Sem tarefas concluídas</div>}</ul></div></div></div>}